{"version":3,"file":"getCountryByNationalNumber.js","names":["Metadata","getNumberType","getCountryByNationalNumber","nationalPhoneNumber","_ref","countries","defaultCountry","metadata","_iterator","_createForOfIteratorHelperLoose","_step","done","country","value","leadingDigits","search","phone","undefined"],"sources":["../../source/helpers/getCountryByNationalNumber.js"],"sourcesContent":["import Metadata from '../metadata.js'\r\nimport getNumberType from './getNumberType.js'\r\n\r\nexport default function getCountryByNationalNumber(nationalPhoneNumber, {\r\n\tcountries,\r\n\tdefaultCountry,\r\n\tmetadata\r\n}) {\r\n\t// Re-create `metadata` because it will be selecting a `country`.\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// const matchingCountries = []\r\n\r\n\tfor (const country of countries) {\r\n\t\tmetadata.country(country)\r\n\t\t// \"Leading digits\" patterns are only defined for about 20% of all countries.\r\n\t\t// By definition, matching \"leading digits\" is a sufficient but not a necessary\r\n\t\t// condition for a phone number to belong to a country.\r\n\t\t// The point of \"leading digits\" check is that it's the fastest one to get a match.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\r\n\t\t// I'd suppose that \"leading digits\" patterns are mutually exclusive for different countries\r\n\t\t// because of the intended use of that feature.\r\n\t\tif (metadata.leadingDigits()) {\r\n\t\t\tif (nationalPhoneNumber &&\r\n\t\t\t\tnationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\r\n\t\t\t\treturn country\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Else perform full validation with all of those\r\n\t\t// fixed-line/mobile/etc regular expressions.\r\n\t\telse if (getNumberType({ phone: nationalPhoneNumber, country }, undefined, metadata.metadata)) {\r\n\t\t\t// If both the `defaultCountry` and the \"main\" one match the phone number,\r\n\t\t\t// don't prefer the `defaultCountry` over the \"main\" one.\r\n\t\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/154\r\n\t\t\treturn country\r\n\t\t\t// // If the `defaultCountry` is among the `matchingCountries` then return it.\r\n\t\t\t// if (defaultCountry) {\r\n\t\t\t// \tif (country === defaultCountry) {\r\n\t\t\t// \t\treturn country\r\n\t\t\t// \t}\r\n\t\t\t// \tmatchingCountries.push(country)\r\n\t\t\t// } else {\r\n\t\t\t// \treturn country\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\r\n\t// // Return the first (\"main\") one of the `matchingCountries`.\r\n\t// if (matchingCountries.length > 0) {\r\n\t// \treturn matchingCountries[0]\r\n\t// }\r\n}"],"mappings":";;;AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,aAAa,MAAM,oBAAoB;AAE9C,eAAe,SAASC,0BAA0BA,CAACC,mBAAmB,EAAAC,IAAA,EAInE;EAAA,IAHFC,SAAS,GAAAD,IAAA,CAATC,SAAS;IACTC,cAAc,GAAAF,IAAA,CAAdE,cAAc;IACdC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAER;EACAA,QAAQ,GAAG,IAAIP,QAAQ,CAACO,QAAQ,CAAC;;EAEjC;;EAEA,SAAAC,SAAA,GAAAC,+BAAA,CAAsBJ,SAAS,GAAAK,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;IAAA,IAAtBC,OAAO,GAAAF,KAAA,CAAAG,KAAA;IACjBN,QAAQ,CAACK,OAAO,CAACA,OAAO,CAAC;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIL,QAAQ,CAACO,aAAa,CAAC,CAAC,EAAE;MAC7B,IAAIX,mBAAmB,IACtBA,mBAAmB,CAACY,MAAM,CAACR,QAAQ,CAACO,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC5D,OAAOF,OAAO;MACf;IACD;IACA;IACA;IAAA,KACK,IAAIX,aAAa,CAAC;MAAEe,KAAK,EAAEb,mBAAmB;MAAES,OAAO,EAAPA;IAAQ,CAAC,EAAEK,SAAS,EAAEV,QAAQ,CAACA,QAAQ,CAAC,EAAE;MAC9F;MACA;MACA;MACA,OAAOK,OAAO;MACd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD;EACD;;EAEA;EACA;EACA;EACA;AACD","ignoreList":[]}