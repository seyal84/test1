{"version":3,"file":"checkNumberLength.test.js","names":["Metadata","metadata","type","oldMetadata","checkNumberLengthForType","describe","it","expect","checkNumberLength","to","equal","undefined","_oldMetadata","country","number","_metadata"],"sources":["../../source/helpers/checkNumberLength.test.js"],"sourcesContent":["import Metadata from '../metadata.js'\r\nimport metadata from '../../metadata.max.json' with { type: 'json' }\r\nimport oldMetadata from '../../test/metadata/1.0.0/metadata.min.json' with { type: 'json' }\r\n\r\nimport { checkNumberLengthForType } from './checkNumberLength.js'\r\n\r\ndescribe('checkNumberLength', () => {\r\n\tit('should check phone number length', () => {\r\n\t\t// Too short.\r\n\t\texpect(checkNumberLength('800555353', 'FIXED_LINE', 'RU')).to.equal('TOO_SHORT')\r\n\t\t// Normal.\r\n\t\texpect(checkNumberLength('8005553535', 'FIXED_LINE', 'RU')).to.equal('IS_POSSIBLE')\r\n\t\t// Too long.\r\n\t\texpect(checkNumberLength('80055535355', 'FIXED_LINE', 'RU')).to.equal('TOO_LONG')\r\n\r\n\t\t// No such type.\r\n\t\texpect(checkNumberLength('169454850', 'VOIP', 'AC')).to.equal('INVALID_LENGTH')\r\n\t\t// No such possible length.\r\n\t\texpect(checkNumberLength('1694548', undefined, 'AD')).to.equal('INVALID_LENGTH')\r\n\r\n\t\t// FIXED_LINE_OR_MOBILE\r\n\t\texpect(checkNumberLength('1694548', 'FIXED_LINE_OR_MOBILE', 'AD')).to.equal('INVALID_LENGTH')\r\n\t\t// No mobile phones.\r\n\t\texpect(checkNumberLength('8123', 'FIXED_LINE_OR_MOBILE', 'TA')).to.equal('IS_POSSIBLE')\r\n\t\t// No \"possible lengths\" for \"mobile\".\r\n\t\texpect(checkNumberLength('81234567', 'FIXED_LINE_OR_MOBILE', 'SZ')).to.equal('IS_POSSIBLE')\r\n\t})\r\n\r\n\tit('should work for old metadata', function() {\r\n\t\tconst _oldMetadata = new Metadata(oldMetadata)\r\n\t\t_oldMetadata.country('RU')\r\n\t\texpect(checkNumberLengthForType('8005553535', 'FIXED_LINE', _oldMetadata)).to.equal('IS_POSSIBLE')\r\n\t})\r\n})\r\n\r\nfunction checkNumberLength(number, type, country) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\t_metadata.country(country)\r\n\treturn checkNumberLengthForType(number, type, _metadata)\r\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,QAAQ,MAAM,yBAAyB,QAAQC,IAAI,EAAE,MAAM;AAClE,OAAOC,WAAW,MAAM,6CAA6C,QAAQD,IAAI,EAAE,MAAM;AAEzF,SAASE,wBAAwB,QAAQ,wBAAwB;AAEjEC,QAAQ,CAAC,mBAAmB,EAAE,YAAM;EACnCC,EAAE,CAAC,kCAAkC,EAAE,YAAM;IAC5C;IACAC,MAAM,CAACC,iBAAiB,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,WAAW,CAAC;IAChF;IACAH,MAAM,CAACC,iBAAiB,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,aAAa,CAAC;IACnF;IACAH,MAAM,CAACC,iBAAiB,CAAC,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,UAAU,CAAC;;IAEjF;IACAH,MAAM,CAACC,iBAAiB,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,gBAAgB,CAAC;IAC/E;IACAH,MAAM,CAACC,iBAAiB,CAAC,SAAS,EAAEG,SAAS,EAAE,IAAI,CAAC,CAAC,CAACF,EAAE,CAACC,KAAK,CAAC,gBAAgB,CAAC;;IAEhF;IACAH,MAAM,CAACC,iBAAiB,CAAC,SAAS,EAAE,sBAAsB,EAAE,IAAI,CAAC,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,gBAAgB,CAAC;IAC7F;IACAH,MAAM,CAACC,iBAAiB,CAAC,MAAM,EAAE,sBAAsB,EAAE,IAAI,CAAC,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,aAAa,CAAC;IACvF;IACAH,MAAM,CAACC,iBAAiB,CAAC,UAAU,EAAE,sBAAsB,EAAE,IAAI,CAAC,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,aAAa,CAAC;EAC5F,CAAC,CAAC;EAEFJ,EAAE,CAAC,8BAA8B,EAAE,YAAW;IAC7C,IAAMM,YAAY,GAAG,IAAIZ,QAAQ,CAACG,WAAW,CAAC;IAC9CS,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;IAC1BN,MAAM,CAACH,wBAAwB,CAAC,YAAY,EAAE,YAAY,EAAEQ,YAAY,CAAC,CAAC,CAACH,EAAE,CAACC,KAAK,CAAC,aAAa,CAAC;EACnG,CAAC,CAAC;AACH,CAAC,CAAC;AAEF,SAASF,iBAAiBA,CAACM,MAAM,EAAEZ,IAAI,EAAEW,OAAO,EAAE;EACjD,IAAME,SAAS,GAAG,IAAIf,QAAQ,CAACC,QAAQ,CAAC;EACxCc,SAAS,CAACF,OAAO,CAACA,OAAO,CAAC;EAC1B,OAAOT,wBAAwB,CAACU,MAAM,EAAEZ,IAAI,EAAEa,SAAS,CAAC;AACzD","ignoreList":[]}