{"version":3,"file":"isPossiblePhoneNumber.test.js","names":["_isPossiblePhoneNumber2","_interopRequireDefault","require","_metadataMin","_metadataMin2","e","__esModule","isPossiblePhoneNumber","_len","arguments","length","parameters","Array","_key","push","metadata","_isPossiblePhoneNumber","apply","describe","it","expect","to","equal","defaultCountry","oldMetadata"],"sources":["../source/isPossiblePhoneNumber.test.js"],"sourcesContent":["import _isPossiblePhoneNumber from './isPossiblePhoneNumber.js'\r\nimport metadata from '../metadata.min.json' with { type: 'json' }\r\nimport oldMetadata from '../test/metadata/1.0.0/metadata.min.json' with { type: 'json' }\r\n\r\nfunction isPossiblePhoneNumber(...parameters) {\r\n\tparameters.push(metadata)\r\n\treturn _isPossiblePhoneNumber.apply(this, parameters)\r\n}\r\n\r\ndescribe('isPossiblePhoneNumber', () => {\r\n\tit('should detect whether a phone number is possible', () => {\r\n\t\texpect(isPossiblePhoneNumber('8 (800) 555 35 35', 'RU')).to.equal(true)\r\n\t\texpect(isPossiblePhoneNumber('8 (800) 555 35 35 0', 'RU')).to.equal(false)\r\n\t\texpect(isPossiblePhoneNumber('Call: 8 (800) 555 35 35', 'RU')).to.equal(false)\r\n\t\texpect(isPossiblePhoneNumber('8 (800) 555 35 35', { defaultCountry: 'RU' })).to.equal(true)\r\n\t\texpect(isPossiblePhoneNumber('+7 (800) 555 35 35')).to.equal(true)\r\n\t\texpect(isPossiblePhoneNumber('+7 1 (800) 555 35 35')).to.equal(false)\r\n\t\texpect(isPossiblePhoneNumber(' +7 (800) 555 35 35')).to.equal(false)\r\n\t\texpect(isPossiblePhoneNumber(' ')).to.equal(false)\r\n\t})\r\n\r\n\tit('should detect whether a phone number is possible when using old metadata', () => {\r\n\t\texpect(() => _isPossiblePhoneNumber('8 (800) 555 35 35', 'RU', oldMetadata)).to.throw('Missing \"possibleLengths\" in metadata.')\r\n\t\texpect(_isPossiblePhoneNumber('+888 123 456 78901', oldMetadata)).to.equal(true)\r\n\t})\r\n})"],"mappings":";;AAAA,IAAAA,uBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,aAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAwF,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAExF,SAASE,qBAAqBA,CAAA,EAAgB;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAZC,UAAU,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAVF,UAAU,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC3CF,UAAU,CAACG,IAAI,CAACC,uBAAQ,CAAC;EACzB,OAAOC,kCAAsB,CAACC,KAAK,CAAC,IAAI,EAAEN,UAAU,CAAC;AACtD;AAEAO,QAAQ,CAAC,uBAAuB,EAAE,YAAM;EACvCC,EAAE,CAAC,kDAAkD,EAAE,YAAM;IAC5DC,MAAM,CAACb,qBAAqB,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,CAACc,EAAE,CAACC,KAAK,CAAC,IAAI,CAAC;IACvEF,MAAM,CAACb,qBAAqB,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC,CAACc,EAAE,CAACC,KAAK,CAAC,KAAK,CAAC;IAC1EF,MAAM,CAACb,qBAAqB,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC,CAACc,EAAE,CAACC,KAAK,CAAC,KAAK,CAAC;IAC9EF,MAAM,CAACb,qBAAqB,CAAC,mBAAmB,EAAE;MAAEgB,cAAc,EAAE;IAAK,CAAC,CAAC,CAAC,CAACF,EAAE,CAACC,KAAK,CAAC,IAAI,CAAC;IAC3FF,MAAM,CAACb,qBAAqB,CAAC,oBAAoB,CAAC,CAAC,CAACc,EAAE,CAACC,KAAK,CAAC,IAAI,CAAC;IAClEF,MAAM,CAACb,qBAAqB,CAAC,sBAAsB,CAAC,CAAC,CAACc,EAAE,CAACC,KAAK,CAAC,KAAK,CAAC;IACrEF,MAAM,CAACb,qBAAqB,CAAC,qBAAqB,CAAC,CAAC,CAACc,EAAE,CAACC,KAAK,CAAC,KAAK,CAAC;IACpEF,MAAM,CAACb,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAACc,EAAE,CAACC,KAAK,CAAC,KAAK,CAAC;EACnD,CAAC,CAAC;EAEFH,EAAE,CAAC,0EAA0E,EAAE,YAAM;IACpFC,MAAM,CAAC;MAAA,OAAM,IAAAJ,kCAAsB,EAAC,mBAAmB,EAAE,IAAI,EAAEQ,wBAAW,CAAC;IAAA,EAAC,CAACH,EAAE,SAAM,CAAC,wCAAwC,CAAC;IAC/HD,MAAM,CAAC,IAAAJ,kCAAsB,EAAC,oBAAoB,EAAEQ,wBAAW,CAAC,CAAC,CAACH,EAAE,CAACC,KAAK,CAAC,IAAI,CAAC;EACjF,CAAC,CAAC;AACH,CAAC,CAAC","ignoreList":[]}