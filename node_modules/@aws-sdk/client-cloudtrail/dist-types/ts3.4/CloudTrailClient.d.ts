import {
  HostHeaderInputConfig,
  HostHeaderResolvedConfig,
} from "@aws-sdk/middleware-host-header";
import {
  UserAgentInputConfig,
  UserAgentResolvedConfig,
} from "@aws-sdk/middleware-user-agent";
import {
  RegionInputConfig,
  RegionResolvedConfig,
} from "@smithy/config-resolver";
import {
  EndpointInputConfig,
  EndpointResolvedConfig,
} from "@smithy/middleware-endpoint";
import {
  RetryInputConfig,
  RetryResolvedConfig,
} from "@smithy/middleware-retry";
import { HttpHandlerUserInput as __HttpHandlerUserInput } from "@smithy/protocol-http";
import {
  Client as __Client,
  DefaultsMode as __DefaultsMode,
  SmithyConfiguration as __SmithyConfiguration,
  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,
} from "@smithy/smithy-client";
import {
  AwsCredentialIdentityProvider,
  BodyLengthCalculator as __BodyLengthCalculator,
  CheckOptionalClientConfig as __CheckOptionalClientConfig,
  ChecksumConstructor as __ChecksumConstructor,
  Decoder as __Decoder,
  Encoder as __Encoder,
  HashConstructor as __HashConstructor,
  HttpHandlerOptions as __HttpHandlerOptions,
  Logger as __Logger,
  Provider as __Provider,
  Provider,
  StreamCollector as __StreamCollector,
  UrlParser as __UrlParser,
  UserAgent as __UserAgent,
} from "@smithy/types";
import {
  HttpAuthSchemeInputConfig,
  HttpAuthSchemeResolvedConfig,
} from "./auth/httpAuthSchemeProvider";
import {
  AddTagsCommandInput,
  AddTagsCommandOutput,
} from "./commands/AddTagsCommand";
import {
  CancelQueryCommandInput,
  CancelQueryCommandOutput,
} from "./commands/CancelQueryCommand";
import {
  CreateChannelCommandInput,
  CreateChannelCommandOutput,
} from "./commands/CreateChannelCommand";
import {
  CreateDashboardCommandInput,
  CreateDashboardCommandOutput,
} from "./commands/CreateDashboardCommand";
import {
  CreateEventDataStoreCommandInput,
  CreateEventDataStoreCommandOutput,
} from "./commands/CreateEventDataStoreCommand";
import {
  CreateTrailCommandInput,
  CreateTrailCommandOutput,
} from "./commands/CreateTrailCommand";
import {
  DeleteChannelCommandInput,
  DeleteChannelCommandOutput,
} from "./commands/DeleteChannelCommand";
import {
  DeleteDashboardCommandInput,
  DeleteDashboardCommandOutput,
} from "./commands/DeleteDashboardCommand";
import {
  DeleteEventDataStoreCommandInput,
  DeleteEventDataStoreCommandOutput,
} from "./commands/DeleteEventDataStoreCommand";
import {
  DeleteResourcePolicyCommandInput,
  DeleteResourcePolicyCommandOutput,
} from "./commands/DeleteResourcePolicyCommand";
import {
  DeleteTrailCommandInput,
  DeleteTrailCommandOutput,
} from "./commands/DeleteTrailCommand";
import {
  DeregisterOrganizationDelegatedAdminCommandInput,
  DeregisterOrganizationDelegatedAdminCommandOutput,
} from "./commands/DeregisterOrganizationDelegatedAdminCommand";
import {
  DescribeQueryCommandInput,
  DescribeQueryCommandOutput,
} from "./commands/DescribeQueryCommand";
import {
  DescribeTrailsCommandInput,
  DescribeTrailsCommandOutput,
} from "./commands/DescribeTrailsCommand";
import {
  DisableFederationCommandInput,
  DisableFederationCommandOutput,
} from "./commands/DisableFederationCommand";
import {
  EnableFederationCommandInput,
  EnableFederationCommandOutput,
} from "./commands/EnableFederationCommand";
import {
  GenerateQueryCommandInput,
  GenerateQueryCommandOutput,
} from "./commands/GenerateQueryCommand";
import {
  GetChannelCommandInput,
  GetChannelCommandOutput,
} from "./commands/GetChannelCommand";
import {
  GetDashboardCommandInput,
  GetDashboardCommandOutput,
} from "./commands/GetDashboardCommand";
import {
  GetEventConfigurationCommandInput,
  GetEventConfigurationCommandOutput,
} from "./commands/GetEventConfigurationCommand";
import {
  GetEventDataStoreCommandInput,
  GetEventDataStoreCommandOutput,
} from "./commands/GetEventDataStoreCommand";
import {
  GetEventSelectorsCommandInput,
  GetEventSelectorsCommandOutput,
} from "./commands/GetEventSelectorsCommand";
import {
  GetImportCommandInput,
  GetImportCommandOutput,
} from "./commands/GetImportCommand";
import {
  GetInsightSelectorsCommandInput,
  GetInsightSelectorsCommandOutput,
} from "./commands/GetInsightSelectorsCommand";
import {
  GetQueryResultsCommandInput,
  GetQueryResultsCommandOutput,
} from "./commands/GetQueryResultsCommand";
import {
  GetResourcePolicyCommandInput,
  GetResourcePolicyCommandOutput,
} from "./commands/GetResourcePolicyCommand";
import {
  GetTrailCommandInput,
  GetTrailCommandOutput,
} from "./commands/GetTrailCommand";
import {
  GetTrailStatusCommandInput,
  GetTrailStatusCommandOutput,
} from "./commands/GetTrailStatusCommand";
import {
  ListChannelsCommandInput,
  ListChannelsCommandOutput,
} from "./commands/ListChannelsCommand";
import {
  ListDashboardsCommandInput,
  ListDashboardsCommandOutput,
} from "./commands/ListDashboardsCommand";
import {
  ListEventDataStoresCommandInput,
  ListEventDataStoresCommandOutput,
} from "./commands/ListEventDataStoresCommand";
import {
  ListImportFailuresCommandInput,
  ListImportFailuresCommandOutput,
} from "./commands/ListImportFailuresCommand";
import {
  ListImportsCommandInput,
  ListImportsCommandOutput,
} from "./commands/ListImportsCommand";
import {
  ListInsightsMetricDataCommandInput,
  ListInsightsMetricDataCommandOutput,
} from "./commands/ListInsightsMetricDataCommand";
import {
  ListPublicKeysCommandInput,
  ListPublicKeysCommandOutput,
} from "./commands/ListPublicKeysCommand";
import {
  ListQueriesCommandInput,
  ListQueriesCommandOutput,
} from "./commands/ListQueriesCommand";
import {
  ListTagsCommandInput,
  ListTagsCommandOutput,
} from "./commands/ListTagsCommand";
import {
  ListTrailsCommandInput,
  ListTrailsCommandOutput,
} from "./commands/ListTrailsCommand";
import {
  LookupEventsCommandInput,
  LookupEventsCommandOutput,
} from "./commands/LookupEventsCommand";
import {
  PutEventConfigurationCommandInput,
  PutEventConfigurationCommandOutput,
} from "./commands/PutEventConfigurationCommand";
import {
  PutEventSelectorsCommandInput,
  PutEventSelectorsCommandOutput,
} from "./commands/PutEventSelectorsCommand";
import {
  PutInsightSelectorsCommandInput,
  PutInsightSelectorsCommandOutput,
} from "./commands/PutInsightSelectorsCommand";
import {
  PutResourcePolicyCommandInput,
  PutResourcePolicyCommandOutput,
} from "./commands/PutResourcePolicyCommand";
import {
  RegisterOrganizationDelegatedAdminCommandInput,
  RegisterOrganizationDelegatedAdminCommandOutput,
} from "./commands/RegisterOrganizationDelegatedAdminCommand";
import {
  RemoveTagsCommandInput,
  RemoveTagsCommandOutput,
} from "./commands/RemoveTagsCommand";
import {
  RestoreEventDataStoreCommandInput,
  RestoreEventDataStoreCommandOutput,
} from "./commands/RestoreEventDataStoreCommand";
import {
  SearchSampleQueriesCommandInput,
  SearchSampleQueriesCommandOutput,
} from "./commands/SearchSampleQueriesCommand";
import {
  StartDashboardRefreshCommandInput,
  StartDashboardRefreshCommandOutput,
} from "./commands/StartDashboardRefreshCommand";
import {
  StartEventDataStoreIngestionCommandInput,
  StartEventDataStoreIngestionCommandOutput,
} from "./commands/StartEventDataStoreIngestionCommand";
import {
  StartImportCommandInput,
  StartImportCommandOutput,
} from "./commands/StartImportCommand";
import {
  StartLoggingCommandInput,
  StartLoggingCommandOutput,
} from "./commands/StartLoggingCommand";
import {
  StartQueryCommandInput,
  StartQueryCommandOutput,
} from "./commands/StartQueryCommand";
import {
  StopEventDataStoreIngestionCommandInput,
  StopEventDataStoreIngestionCommandOutput,
} from "./commands/StopEventDataStoreIngestionCommand";
import {
  StopImportCommandInput,
  StopImportCommandOutput,
} from "./commands/StopImportCommand";
import {
  StopLoggingCommandInput,
  StopLoggingCommandOutput,
} from "./commands/StopLoggingCommand";
import {
  UpdateChannelCommandInput,
  UpdateChannelCommandOutput,
} from "./commands/UpdateChannelCommand";
import {
  UpdateDashboardCommandInput,
  UpdateDashboardCommandOutput,
} from "./commands/UpdateDashboardCommand";
import {
  UpdateEventDataStoreCommandInput,
  UpdateEventDataStoreCommandOutput,
} from "./commands/UpdateEventDataStoreCommand";
import {
  UpdateTrailCommandInput,
  UpdateTrailCommandOutput,
} from "./commands/UpdateTrailCommand";
import {
  ClientInputEndpointParameters,
  ClientResolvedEndpointParameters,
  EndpointParameters,
} from "./endpoint/EndpointParameters";
import { RuntimeExtension, RuntimeExtensionsConfig } from "./runtimeExtensions";
export { __Client };
export type ServiceInputTypes =
  | AddTagsCommandInput
  | CancelQueryCommandInput
  | CreateChannelCommandInput
  | CreateDashboardCommandInput
  | CreateEventDataStoreCommandInput
  | CreateTrailCommandInput
  | DeleteChannelCommandInput
  | DeleteDashboardCommandInput
  | DeleteEventDataStoreCommandInput
  | DeleteResourcePolicyCommandInput
  | DeleteTrailCommandInput
  | DeregisterOrganizationDelegatedAdminCommandInput
  | DescribeQueryCommandInput
  | DescribeTrailsCommandInput
  | DisableFederationCommandInput
  | EnableFederationCommandInput
  | GenerateQueryCommandInput
  | GetChannelCommandInput
  | GetDashboardCommandInput
  | GetEventConfigurationCommandInput
  | GetEventDataStoreCommandInput
  | GetEventSelectorsCommandInput
  | GetImportCommandInput
  | GetInsightSelectorsCommandInput
  | GetQueryResultsCommandInput
  | GetResourcePolicyCommandInput
  | GetTrailCommandInput
  | GetTrailStatusCommandInput
  | ListChannelsCommandInput
  | ListDashboardsCommandInput
  | ListEventDataStoresCommandInput
  | ListImportFailuresCommandInput
  | ListImportsCommandInput
  | ListInsightsMetricDataCommandInput
  | ListPublicKeysCommandInput
  | ListQueriesCommandInput
  | ListTagsCommandInput
  | ListTrailsCommandInput
  | LookupEventsCommandInput
  | PutEventConfigurationCommandInput
  | PutEventSelectorsCommandInput
  | PutInsightSelectorsCommandInput
  | PutResourcePolicyCommandInput
  | RegisterOrganizationDelegatedAdminCommandInput
  | RemoveTagsCommandInput
  | RestoreEventDataStoreCommandInput
  | SearchSampleQueriesCommandInput
  | StartDashboardRefreshCommandInput
  | StartEventDataStoreIngestionCommandInput
  | StartImportCommandInput
  | StartLoggingCommandInput
  | StartQueryCommandInput
  | StopEventDataStoreIngestionCommandInput
  | StopImportCommandInput
  | StopLoggingCommandInput
  | UpdateChannelCommandInput
  | UpdateDashboardCommandInput
  | UpdateEventDataStoreCommandInput
  | UpdateTrailCommandInput;
export type ServiceOutputTypes =
  | AddTagsCommandOutput
  | CancelQueryCommandOutput
  | CreateChannelCommandOutput
  | CreateDashboardCommandOutput
  | CreateEventDataStoreCommandOutput
  | CreateTrailCommandOutput
  | DeleteChannelCommandOutput
  | DeleteDashboardCommandOutput
  | DeleteEventDataStoreCommandOutput
  | DeleteResourcePolicyCommandOutput
  | DeleteTrailCommandOutput
  | DeregisterOrganizationDelegatedAdminCommandOutput
  | DescribeQueryCommandOutput
  | DescribeTrailsCommandOutput
  | DisableFederationCommandOutput
  | EnableFederationCommandOutput
  | GenerateQueryCommandOutput
  | GetChannelCommandOutput
  | GetDashboardCommandOutput
  | GetEventConfigurationCommandOutput
  | GetEventDataStoreCommandOutput
  | GetEventSelectorsCommandOutput
  | GetImportCommandOutput
  | GetInsightSelectorsCommandOutput
  | GetQueryResultsCommandOutput
  | GetResourcePolicyCommandOutput
  | GetTrailCommandOutput
  | GetTrailStatusCommandOutput
  | ListChannelsCommandOutput
  | ListDashboardsCommandOutput
  | ListEventDataStoresCommandOutput
  | ListImportFailuresCommandOutput
  | ListImportsCommandOutput
  | ListInsightsMetricDataCommandOutput
  | ListPublicKeysCommandOutput
  | ListQueriesCommandOutput
  | ListTagsCommandOutput
  | ListTrailsCommandOutput
  | LookupEventsCommandOutput
  | PutEventConfigurationCommandOutput
  | PutEventSelectorsCommandOutput
  | PutInsightSelectorsCommandOutput
  | PutResourcePolicyCommandOutput
  | RegisterOrganizationDelegatedAdminCommandOutput
  | RemoveTagsCommandOutput
  | RestoreEventDataStoreCommandOutput
  | SearchSampleQueriesCommandOutput
  | StartDashboardRefreshCommandOutput
  | StartEventDataStoreIngestionCommandOutput
  | StartImportCommandOutput
  | StartLoggingCommandOutput
  | StartQueryCommandOutput
  | StopEventDataStoreIngestionCommandOutput
  | StopImportCommandOutput
  | StopLoggingCommandOutput
  | UpdateChannelCommandOutput
  | UpdateDashboardCommandOutput
  | UpdateEventDataStoreCommandOutput
  | UpdateTrailCommandOutput;
export interface ClientDefaults
  extends Partial<__SmithyConfiguration<__HttpHandlerOptions>> {
  requestHandler?: __HttpHandlerUserInput;
  sha256?: __ChecksumConstructor | __HashConstructor;
  urlParser?: __UrlParser;
  bodyLengthChecker?: __BodyLengthCalculator;
  streamCollector?: __StreamCollector;
  base64Decoder?: __Decoder;
  base64Encoder?: __Encoder;
  utf8Decoder?: __Decoder;
  utf8Encoder?: __Encoder;
  runtime?: string;
  disableHostPrefix?: boolean;
  serviceId?: string;
  useDualstackEndpoint?: boolean | __Provider<boolean>;
  useFipsEndpoint?: boolean | __Provider<boolean>;
  region?: string | __Provider<string>;
  profile?: string;
  defaultUserAgentProvider?: Provider<__UserAgent>;
  credentialDefaultProvider?: (input: any) => AwsCredentialIdentityProvider;
  maxAttempts?: number | __Provider<number>;
  retryMode?: string | __Provider<string>;
  logger?: __Logger;
  extensions?: RuntimeExtension[];
  defaultsMode?: __DefaultsMode | __Provider<__DefaultsMode>;
}
export type CloudTrailClientConfigType = Partial<
  __SmithyConfiguration<__HttpHandlerOptions>
> &
  ClientDefaults &
  UserAgentInputConfig &
  RetryInputConfig &
  RegionInputConfig &
  HostHeaderInputConfig &
  EndpointInputConfig<EndpointParameters> &
  HttpAuthSchemeInputConfig &
  ClientInputEndpointParameters;
export interface CloudTrailClientConfig extends CloudTrailClientConfigType {}
export type CloudTrailClientResolvedConfigType =
  __SmithyResolvedConfiguration<__HttpHandlerOptions> &
    Required<ClientDefaults> &
    RuntimeExtensionsConfig &
    UserAgentResolvedConfig &
    RetryResolvedConfig &
    RegionResolvedConfig &
    HostHeaderResolvedConfig &
    EndpointResolvedConfig<EndpointParameters> &
    HttpAuthSchemeResolvedConfig &
    ClientResolvedEndpointParameters;
export interface CloudTrailClientResolvedConfig
  extends CloudTrailClientResolvedConfigType {}
export declare class CloudTrailClient extends __Client<
  __HttpHandlerOptions,
  ServiceInputTypes,
  ServiceOutputTypes,
  CloudTrailClientResolvedConfig
> {
  readonly config: CloudTrailClientResolvedConfig;
  constructor(
    ...[configuration]: __CheckOptionalClientConfig<CloudTrailClientConfig>
  );
  destroy(): void;
}
