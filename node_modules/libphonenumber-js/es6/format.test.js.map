{"version":3,"file":"format.test.js","names":["metadata","type","formatNumber_","parsePhoneNumber","formatNumber","v2","_len","arguments","length","parameters","Array","_key","push","undefined","_objectSpread","extract","apply","describe","it","expect","to","equal","defaultCountry","phone","countryCallingCode","options","formatExtension","number","extension","concat","country","ext","nationalPrefix","thrower","be","fromCountry","humanReadable"],"sources":["../source/format.test.js"],"sourcesContent":["import metadata from '../metadata.min.json' with { type: 'json' }\r\nimport formatNumber_ from './format.js'\r\nimport parsePhoneNumber from './parsePhoneNumber.js'\r\n\r\nfunction formatNumber(...parameters) {\r\n\tlet v2\r\n\tif (parameters.length < 1) {\r\n\t\t// `input` parameter.\r\n\t\tparameters.push(undefined)\r\n\t} else {\r\n\t\t// Convert string `input` to a `PhoneNumber` instance.\r\n\t\tif (typeof parameters[0] === 'string') {\r\n\t\t\tv2 = true\r\n\t\t\tparameters[0] = parsePhoneNumber(parameters[0], {\r\n\t\t\t\t...parameters[2],\r\n\t\t\t\textract: false\r\n\t\t\t}, metadata)\r\n\t\t}\r\n\t}\r\n\tif (parameters.length < 2) {\r\n\t\t// `format` parameter.\r\n\t\tparameters.push(undefined)\r\n\t}\r\n\tif (parameters.length < 3) {\r\n\t\t// `options` parameter.\r\n\t\tparameters.push(undefined)\r\n\t}\r\n\t// Set `v2` flag.\r\n\tparameters[2] = {\r\n\t\tv2,\r\n\t\t...parameters[2]\r\n\t}\r\n\t// Add `metadata` parameter.\r\n\tparameters.push(metadata)\r\n\t// Call the function.\r\n\treturn formatNumber_.apply(this, parameters)\r\n}\r\n\r\ndescribe('format', () => {\r\n\tit('should work with the first argument being a E.164 number', () => {\r\n\t\texpect(formatNumber('+12133734253', 'NATIONAL')).to.equal('(213) 373-4253')\r\n\t\texpect(formatNumber('+12133734253', 'INTERNATIONAL')).to.equal('+1 213 373 4253')\r\n\r\n\t\t// Invalid number.\r\n\t\texpect(formatNumber('+12111111111', 'NATIONAL')).to.equal('(211) 111-1111')\r\n\r\n\t\t// Formatting invalid E.164 numbers.\r\n\t\texpect(formatNumber('+11111', 'INTERNATIONAL')).to.equal('+1 1111')\r\n\t\texpect(formatNumber('+11111', 'NATIONAL')).to.equal('1111')\r\n\t})\r\n\r\n\tit('should work with the first object argument expanded', () => {\r\n\t\texpect(formatNumber('2133734253', 'NATIONAL', { defaultCountry: 'US' })).to.equal('(213) 373-4253')\r\n\t\texpect(formatNumber('2133734253', 'INTERNATIONAL', { defaultCountry: 'US' })).to.equal('+1 213 373 4253')\r\n\t})\r\n\r\n\tit('should format using formats with no leading digits (`format.leadingDigitsPatterns().length === 0`)', () => {\r\n\t\texpect(\r\n            formatNumber({ phone: '12345678901', countryCallingCode: 888 }, 'INTERNATIONAL')\r\n        ).to.equal('+888 123 456 78901')\r\n\t})\r\n\r\n\tit('should sort out the arguments', () => {\r\n\t\tconst options = {\r\n\t\t\tformatExtension: (number, extension) => `${number} доб. ${extension}`\r\n\t\t}\r\n\r\n\t\texpect(formatNumber({\r\n\t\t\tphone   : '8005553535',\r\n\t\t\tcountry : 'RU',\r\n\t\t\text     : '123'\r\n\t\t},\r\n\t\t'NATIONAL', options)).to.equal('8 (800) 555-35-35 доб. 123')\r\n\r\n\t\t// Parse number from string.\r\n\t\texpect(formatNumber('+78005553535', 'NATIONAL', options)).to.equal('8 (800) 555-35-35')\r\n\t\texpect(\r\n            formatNumber('8005553535', 'NATIONAL', { ...options, defaultCountry: 'RU' })\r\n        ).to.equal('8 (800) 555-35-35')\r\n\t})\r\n\r\n\tit('should format with national prefix when specifically instructed', () => {\r\n\t\t// With national prefix.\r\n\t\texpect(formatNumber('88005553535', 'NATIONAL', { defaultCountry: 'RU' })).to.equal('8 (800) 555-35-35')\r\n\t\t// Without national prefix via an explicitly set option.\r\n\t\texpect(\r\n            formatNumber('88005553535', 'NATIONAL', { nationalPrefix: false, defaultCountry: 'RU' })\r\n        ).to.equal('800 555-35-35')\r\n\t})\r\n\r\n\tit('should format valid phone numbers', () => {\r\n\t\t// Switzerland\r\n\t\texpect(formatNumber({ country: 'CH', phone: '446681800' }, 'INTERNATIONAL')).to.equal('+41 44 668 18 00')\r\n\t\texpect(formatNumber({ country: 'CH', phone: '446681800' }, 'E.164')).to.equal('+41446681800')\r\n\t\texpect(formatNumber({ country: 'CH', phone: '446681800' }, 'RFC3966')).to.equal('tel:+41446681800')\r\n\t\texpect(formatNumber({ country: 'CH', phone: '446681800' }, 'NATIONAL')).to.equal('044 668 18 00')\r\n\r\n\t\t// France\r\n\t\texpect(formatNumber({ country: 'FR', phone: '169454850' }, 'NATIONAL')).to.equal('01 69 45 48 50')\r\n\r\n\t\t// Kazakhstan\r\n\t\texpect(formatNumber('+7 702 211 1111', 'NATIONAL')).to.equal('8 (702) 211 1111')\r\n\t})\r\n\r\n\tit('should format national numbers with national prefix even if it\\'s optional', () => {\r\n\t\t// Russia\r\n\t\texpect(formatNumber({ country: 'RU', phone: '9991234567' }, 'NATIONAL')).to.equal('8 (999) 123-45-67')\r\n\t})\r\n\r\n\tit('should work in edge cases', () => {\r\n\t\tlet thrower\r\n\r\n\t\t// // No phone number\r\n\t\t// formatNumber('', 'INTERNATIONAL', { defaultCountry: 'RU' }).should.equal('')\r\n\t\t// formatNumber('', 'NATIONAL', { defaultCountry: 'RU' }).should.equal('')\r\n\r\n\t\texpect(formatNumber({ country: 'RU', phone: '' }, 'INTERNATIONAL')).to.equal('+7')\r\n\t\texpect(formatNumber({ country: 'RU', phone: '' }, 'NATIONAL')).to.equal('')\r\n\r\n\t\t// No suitable format\r\n\t\texpect(formatNumber('+121337342530', 'NATIONAL', { defaultCountry: 'US' })).to.equal('21337342530')\r\n\t\t// No suitable format (leading digits mismatch)\r\n\t\texpect(formatNumber('28199999', 'NATIONAL', { defaultCountry: 'AD' })).to.equal('28199999')\r\n\r\n\t\t// // Numerical `value`\r\n\t\t// thrower = () => formatNumber(89150000000, 'NATIONAL', { defaultCountry: 'RU' })\r\n\t\t// thrower.should.throw('A phone number must either be a string or an object of shape { phone, [country] }.')\r\n\r\n\t\t// // No metadata for country\r\n\t\t// expect(() => formatNumber('+121337342530', 'NATIONAL', { defaultCountry: 'USA' })).to.throw('Unknown country')\r\n\t\t// expect(() => formatNumber('21337342530', 'NATIONAL', { defaultCountry: 'USA' })).to.throw('Unknown country')\r\n\r\n\t\t// No format type\r\n\t\tthrower = () => formatNumber('+123')\r\n\t\texpect(thrower).to.throw('Unknown \"format\" argument')\r\n\r\n\t\t// Unknown format type\r\n\t\tthrower = () => formatNumber('123', 'Gay', { defaultCountry: 'US' })\r\n\t\texpect(thrower).to.throw('Unknown \"format\" argument')\r\n\r\n\t\t// // No metadata\r\n\t\t// thrower = () => _formatNumber('123', 'E.164', { defaultCountry: 'RU' })\r\n\t\t// thrower.should.throw('`metadata`')\r\n\r\n\t\t// No formats\r\n\t\texpect(formatNumber('012345', 'NATIONAL', { defaultCountry: 'AC' })).to.equal('012345')\r\n\r\n\t\t// No `fromCountry` for `IDD` format.\r\n\t\texpect(formatNumber('+78005553535', 'IDD')).to.be.undefined\r\n\r\n\t\t// `fromCountry` has no default IDD prefix.\r\n\t\texpect(formatNumber('+78005553535', 'IDD', { fromCountry: 'BO' })).to.be.undefined\r\n\r\n\t\t// No such country.\r\n\t\texpect(() => formatNumber({ phone: '123', country: 'USA' }, 'NATIONAL')).to.throw('Unknown country')\r\n\t})\r\n\r\n\tit('should format phone number extensions', () => {\r\n\t\t// National\r\n\t\texpect(formatNumber({\r\n\t\t\tcountry: 'US',\r\n\t\t\tphone: '2133734253',\r\n\t\t\text: '123'\r\n\t\t},\r\n\t\t'NATIONAL')).to.equal('(213) 373-4253 ext. 123')\r\n\r\n\t\t// International\r\n\t\texpect(formatNumber({\r\n\t\t\tcountry : 'US',\r\n\t\t\tphone   : '2133734253',\r\n\t\t\text     : '123'\r\n\t\t},\r\n\t\t'INTERNATIONAL')).to.equal('+1 213 373 4253 ext. 123')\r\n\r\n\t\t// International\r\n\t\texpect(formatNumber({\r\n\t\t\tcountry : 'US',\r\n\t\t\tphone   : '2133734253',\r\n\t\t\text     : '123'\r\n\t\t},\r\n\t\t'INTERNATIONAL')).to.equal('+1 213 373 4253 ext. 123')\r\n\r\n\t\t// E.164\r\n\t\texpect(formatNumber({\r\n\t\t\tcountry : 'US',\r\n\t\t\tphone   : '2133734253',\r\n\t\t\text     : '123'\r\n\t\t},\r\n\t\t'E.164')).to.equal('+12133734253')\r\n\r\n\t\t// RFC3966\r\n\t\texpect(formatNumber({\r\n\t\t\tcountry : 'US',\r\n\t\t\tphone   : '2133734253',\r\n\t\t\text     : '123'\r\n\t\t},\r\n\t\t'RFC3966')).to.equal('tel:+12133734253;ext=123')\r\n\r\n\t\t// Custom ext prefix.\r\n\t\texpect(formatNumber({\r\n\t\t\tcountry : 'GB',\r\n\t\t\tphone   : '7912345678',\r\n\t\t\text     : '123'\r\n\t\t},\r\n\t\t'INTERNATIONAL')).to.equal('+44 7912 345678 x123')\r\n\t})\r\n\r\n\tit('should work with Argentina numbers', () => {\r\n\t\t// The same mobile number is written differently\r\n\t\t// in different formats in Argentina:\r\n\t\t// `9` gets prepended in international format.\r\n\t\texpect(formatNumber({ country: 'AR', phone: '3435551212' }, 'INTERNATIONAL')).to.equal('+54 3435 55 1212')\r\n\t\texpect(formatNumber({ country: 'AR', phone: '3435551212' }, 'NATIONAL')).to.equal('03435 55-1212')\r\n\t})\r\n\r\n\tit('should work with Mexico numbers', () => {\r\n\t\t// Fixed line.\r\n\t\texpect(formatNumber({ country: 'MX', phone: '4499780001' }, 'INTERNATIONAL')).to.equal('+52 449 978 0001')\r\n\t\texpect(formatNumber({ country: 'MX', phone: '4499780001' }, 'NATIONAL')).to.equal('449 978 0001')\r\n\t\t\t// or '(449)978-0001'.\r\n\t\t// Mobile.\r\n\t\t// `1` is prepended before area code to mobile numbers in international format.\r\n\t\texpect(formatNumber({ country: 'MX', phone: '3312345678' }, 'INTERNATIONAL')).to.equal('+52 33 1234 5678')\r\n\t\texpect(formatNumber({ country: 'MX', phone: '3312345678' }, 'NATIONAL')).to.equal('33 1234 5678')\r\n\t\t\t// or '045 33 1234-5678'.\r\n\t})\r\n\r\n\tit('should format possible numbers', () => {\r\n\t\texpect(formatNumber({ countryCallingCode: '7', phone: '1111111111' }, 'E.164')).to.equal('+71111111111')\r\n\r\n\t\texpect(formatNumber({ countryCallingCode: '7', phone: '1111111111' }, 'NATIONAL')).to.equal('1111111111')\r\n\r\n\t\texpect(\r\n            formatNumber({ countryCallingCode: '7', phone: '1111111111' }, 'INTERNATIONAL')\r\n        ).to.equal('+7 1111111111')\r\n\t})\r\n\r\n\tit('should format IDD-prefixed number', () => {\r\n\t\t// No `fromCountry`.\r\n\t\texpect(formatNumber('+78005553535', 'IDD')).to.be.undefined\r\n\r\n\t\t// No default IDD prefix.\r\n\t\texpect(formatNumber('+78005553535', 'IDD', { fromCountry: 'BO' })).to.be.undefined\r\n\r\n\t\t// Same country calling code.\r\n\t\texpect(\r\n            formatNumber('+12133734253', 'IDD', { fromCountry: 'CA', humanReadable: true })\r\n        ).to.equal('1 (213) 373-4253')\r\n\t\texpect(\r\n            formatNumber('+78005553535', 'IDD', { fromCountry: 'KZ', humanReadable: true })\r\n        ).to.equal('8 (800) 555-35-35')\r\n\r\n\t\t// formatNumber('+78005553535', 'IDD', { fromCountry: 'US' }).should.equal('01178005553535')\r\n\t\texpect(\r\n            formatNumber('+78005553535', 'IDD', { fromCountry: 'US', humanReadable: true })\r\n        ).to.equal('011 7 800 555 35 35')\r\n\t})\r\n\r\n\tit('should format non-geographic numbering plan phone numbers', () => {\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/323\r\n\t\texpect(formatNumber('+870773111632', 'INTERNATIONAL')).to.equal('+870 773 111 632')\r\n\t\texpect(formatNumber('+870773111632', 'NATIONAL')).to.equal('773 111 632')\r\n\t})\r\n\r\n\tit('should use the default IDD prefix when formatting a phone number', () => {\r\n\t\t// Testing preferred international prefixes with ~ are supported.\r\n\t\t// (\"~\" designates waiting on a line until proceeding with the input).\r\n\t\texpect(formatNumber('+390236618300', 'IDD', { fromCountry: 'BY' })).to.equal('8~10 39 02 3661 8300')\r\n\t})\r\n})"],"mappings":"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","ignoreList":[]}