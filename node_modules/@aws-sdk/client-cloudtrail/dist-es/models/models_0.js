import { CloudTrailServiceException as __BaseException } from "./CloudTrailServiceException";
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export class AccountHasOngoingImportException extends __BaseException {
    name = "AccountHasOngoingImportException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccountHasOngoingImportException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccountHasOngoingImportException.prototype);
        this.Message = opts.Message;
    }
}
export class AccountNotFoundException extends __BaseException {
    name = "AccountNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccountNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccountNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class AccountNotRegisteredException extends __BaseException {
    name = "AccountNotRegisteredException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccountNotRegisteredException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccountNotRegisteredException.prototype);
        this.Message = opts.Message;
    }
}
export class AccountRegisteredException extends __BaseException {
    name = "AccountRegisteredException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccountRegisteredException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccountRegisteredException.prototype);
        this.Message = opts.Message;
    }
}
export class ChannelARNInvalidException extends __BaseException {
    name = "ChannelARNInvalidException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ChannelARNInvalidException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ChannelARNInvalidException.prototype);
        this.Message = opts.Message;
    }
}
export class ChannelNotFoundException extends __BaseException {
    name = "ChannelNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ChannelNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ChannelNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class CloudTrailARNInvalidException extends __BaseException {
    name = "CloudTrailARNInvalidException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "CloudTrailARNInvalidException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CloudTrailARNInvalidException.prototype);
        this.Message = opts.Message;
    }
}
export class ConflictException extends __BaseException {
    name = "ConflictException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Message = opts.Message;
    }
}
export class EventDataStoreARNInvalidException extends __BaseException {
    name = "EventDataStoreARNInvalidException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "EventDataStoreARNInvalidException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, EventDataStoreARNInvalidException.prototype);
        this.Message = opts.Message;
    }
}
export class EventDataStoreNotFoundException extends __BaseException {
    name = "EventDataStoreNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "EventDataStoreNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, EventDataStoreNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class InactiveEventDataStoreException extends __BaseException {
    name = "InactiveEventDataStoreException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InactiveEventDataStoreException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InactiveEventDataStoreException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidTagParameterException extends __BaseException {
    name = "InvalidTagParameterException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidTagParameterException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidTagParameterException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidTrailNameException extends __BaseException {
    name = "InvalidTrailNameException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidTrailNameException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidTrailNameException.prototype);
        this.Message = opts.Message;
    }
}
export class NoManagementAccountSLRExistsException extends __BaseException {
    name = "NoManagementAccountSLRExistsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "NoManagementAccountSLRExistsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoManagementAccountSLRExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class NotOrganizationMasterAccountException extends __BaseException {
    name = "NotOrganizationMasterAccountException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "NotOrganizationMasterAccountException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NotOrganizationMasterAccountException.prototype);
        this.Message = opts.Message;
    }
}
export class OperationNotPermittedException extends __BaseException {
    name = "OperationNotPermittedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "OperationNotPermittedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, OperationNotPermittedException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceNotFoundException extends __BaseException {
    name = "ResourceNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceTypeNotSupportedException extends __BaseException {
    name = "ResourceTypeNotSupportedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ResourceTypeNotSupportedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceTypeNotSupportedException.prototype);
        this.Message = opts.Message;
    }
}
export class TagsLimitExceededException extends __BaseException {
    name = "TagsLimitExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "TagsLimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TagsLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class UnsupportedOperationException extends __BaseException {
    name = "UnsupportedOperationException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "UnsupportedOperationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, UnsupportedOperationException.prototype);
        this.Message = opts.Message;
    }
}
export const BillingMode = {
    EXTENDABLE_RETENTION_PRICING: "EXTENDABLE_RETENTION_PRICING",
    FIXED_RETENTION_PRICING: "FIXED_RETENTION_PRICING",
};
export const QueryStatus = {
    CANCELLED: "CANCELLED",
    FAILED: "FAILED",
    FINISHED: "FINISHED",
    QUEUED: "QUEUED",
    RUNNING: "RUNNING",
    TIMED_OUT: "TIMED_OUT",
};
export class InactiveQueryException extends __BaseException {
    name = "InactiveQueryException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InactiveQueryException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InactiveQueryException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidParameterException extends __BaseException {
    name = "InvalidParameterException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
        this.Message = opts.Message;
    }
}
export class QueryIdNotFoundException extends __BaseException {
    name = "QueryIdNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "QueryIdNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, QueryIdNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class CannotDelegateManagementAccountException extends __BaseException {
    name = "CannotDelegateManagementAccountException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "CannotDelegateManagementAccountException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CannotDelegateManagementAccountException.prototype);
        this.Message = opts.Message;
    }
}
export class ChannelAlreadyExistsException extends __BaseException {
    name = "ChannelAlreadyExistsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ChannelAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ChannelAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class ChannelExistsForEDSException extends __BaseException {
    name = "ChannelExistsForEDSException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ChannelExistsForEDSException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ChannelExistsForEDSException.prototype);
        this.Message = opts.Message;
    }
}
export class ChannelMaxLimitExceededException extends __BaseException {
    name = "ChannelMaxLimitExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ChannelMaxLimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ChannelMaxLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export const DestinationType = {
    AWS_SERVICE: "AWS_SERVICE",
    EVENT_DATA_STORE: "EVENT_DATA_STORE",
};
export class InvalidEventDataStoreCategoryException extends __BaseException {
    name = "InvalidEventDataStoreCategoryException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidEventDataStoreCategoryException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidEventDataStoreCategoryException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidSourceException extends __BaseException {
    name = "InvalidSourceException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidSourceException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidSourceException.prototype);
        this.Message = opts.Message;
    }
}
export const RefreshScheduleFrequencyUnit = {
    DAYS: "DAYS",
    HOURS: "HOURS",
};
export const RefreshScheduleStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const DashboardType = {
    CUSTOM: "CUSTOM",
    MANAGED: "MANAGED",
};
export class InsufficientEncryptionPolicyException extends __BaseException {
    name = "InsufficientEncryptionPolicyException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InsufficientEncryptionPolicyException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InsufficientEncryptionPolicyException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidQueryStatementException extends __BaseException {
    name = "InvalidQueryStatementException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidQueryStatementException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidQueryStatementException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    name = "ServiceQuotaExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class CloudTrailAccessNotEnabledException extends __BaseException {
    name = "CloudTrailAccessNotEnabledException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "CloudTrailAccessNotEnabledException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CloudTrailAccessNotEnabledException.prototype);
        this.Message = opts.Message;
    }
}
export const EventDataStoreStatus = {
    CREATED: "CREATED",
    ENABLED: "ENABLED",
    PENDING_DELETION: "PENDING_DELETION",
    STARTING_INGESTION: "STARTING_INGESTION",
    STOPPED_INGESTION: "STOPPED_INGESTION",
    STOPPING_INGESTION: "STOPPING_INGESTION",
};
export class EventDataStoreAlreadyExistsException extends __BaseException {
    name = "EventDataStoreAlreadyExistsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "EventDataStoreAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, EventDataStoreAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class EventDataStoreMaxLimitExceededException extends __BaseException {
    name = "EventDataStoreMaxLimitExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "EventDataStoreMaxLimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, EventDataStoreMaxLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class InsufficientDependencyServiceAccessPermissionException extends __BaseException {
    name = "InsufficientDependencyServiceAccessPermissionException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InsufficientDependencyServiceAccessPermissionException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InsufficientDependencyServiceAccessPermissionException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidEventSelectorsException extends __BaseException {
    name = "InvalidEventSelectorsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidEventSelectorsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidEventSelectorsException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidKmsKeyIdException extends __BaseException {
    name = "InvalidKmsKeyIdException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidKmsKeyIdException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidKmsKeyIdException.prototype);
        this.Message = opts.Message;
    }
}
export class KmsException extends __BaseException {
    name = "KmsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "KmsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, KmsException.prototype);
        this.Message = opts.Message;
    }
}
export class KmsKeyNotFoundException extends __BaseException {
    name = "KmsKeyNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "KmsKeyNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, KmsKeyNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class OrganizationNotInAllFeaturesModeException extends __BaseException {
    name = "OrganizationNotInAllFeaturesModeException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "OrganizationNotInAllFeaturesModeException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, OrganizationNotInAllFeaturesModeException.prototype);
        this.Message = opts.Message;
    }
}
export class OrganizationsNotInUseException extends __BaseException {
    name = "OrganizationsNotInUseException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "OrganizationsNotInUseException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, OrganizationsNotInUseException.prototype);
        this.Message = opts.Message;
    }
}
export class CloudTrailInvalidClientTokenIdException extends __BaseException {
    name = "CloudTrailInvalidClientTokenIdException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "CloudTrailInvalidClientTokenIdException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CloudTrailInvalidClientTokenIdException.prototype);
        this.Message = opts.Message;
    }
}
export class CloudWatchLogsDeliveryUnavailableException extends __BaseException {
    name = "CloudWatchLogsDeliveryUnavailableException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "CloudWatchLogsDeliveryUnavailableException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CloudWatchLogsDeliveryUnavailableException.prototype);
        this.Message = opts.Message;
    }
}
export class InsufficientS3BucketPolicyException extends __BaseException {
    name = "InsufficientS3BucketPolicyException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InsufficientS3BucketPolicyException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InsufficientS3BucketPolicyException.prototype);
        this.Message = opts.Message;
    }
}
export class InsufficientSnsTopicPolicyException extends __BaseException {
    name = "InsufficientSnsTopicPolicyException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InsufficientSnsTopicPolicyException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InsufficientSnsTopicPolicyException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidCloudWatchLogsLogGroupArnException extends __BaseException {
    name = "InvalidCloudWatchLogsLogGroupArnException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidCloudWatchLogsLogGroupArnException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidCloudWatchLogsLogGroupArnException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidCloudWatchLogsRoleArnException extends __BaseException {
    name = "InvalidCloudWatchLogsRoleArnException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidCloudWatchLogsRoleArnException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidCloudWatchLogsRoleArnException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidParameterCombinationException extends __BaseException {
    name = "InvalidParameterCombinationException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidParameterCombinationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidParameterCombinationException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidS3BucketNameException extends __BaseException {
    name = "InvalidS3BucketNameException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidS3BucketNameException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidS3BucketNameException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidS3PrefixException extends __BaseException {
    name = "InvalidS3PrefixException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidS3PrefixException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidS3PrefixException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidSnsTopicNameException extends __BaseException {
    name = "InvalidSnsTopicNameException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidSnsTopicNameException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidSnsTopicNameException.prototype);
        this.Message = opts.Message;
    }
}
export class KmsKeyDisabledException extends __BaseException {
    name = "KmsKeyDisabledException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "KmsKeyDisabledException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, KmsKeyDisabledException.prototype);
        this.Message = opts.Message;
    }
}
export class MaximumNumberOfTrailsExceededException extends __BaseException {
    name = "MaximumNumberOfTrailsExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "MaximumNumberOfTrailsExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, MaximumNumberOfTrailsExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class S3BucketDoesNotExistException extends __BaseException {
    name = "S3BucketDoesNotExistException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "S3BucketDoesNotExistException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, S3BucketDoesNotExistException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export class TrailAlreadyExistsException extends __BaseException {
    name = "TrailAlreadyExistsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "TrailAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TrailAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class TrailNotProvidedException extends __BaseException {
    name = "TrailNotProvidedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "TrailNotProvidedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TrailNotProvidedException.prototype);
        this.Message = opts.Message;
    }
}
export class EventDataStoreFederationEnabledException extends __BaseException {
    name = "EventDataStoreFederationEnabledException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "EventDataStoreFederationEnabledException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, EventDataStoreFederationEnabledException.prototype);
        this.Message = opts.Message;
    }
}
export class EventDataStoreHasOngoingImportException extends __BaseException {
    name = "EventDataStoreHasOngoingImportException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "EventDataStoreHasOngoingImportException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, EventDataStoreHasOngoingImportException.prototype);
        this.Message = opts.Message;
    }
}
export class EventDataStoreTerminationProtectedException extends __BaseException {
    name = "EventDataStoreTerminationProtectedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "EventDataStoreTerminationProtectedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, EventDataStoreTerminationProtectedException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceARNNotValidException extends __BaseException {
    name = "ResourceARNNotValidException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ResourceARNNotValidException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceARNNotValidException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourcePolicyNotFoundException extends __BaseException {
    name = "ResourcePolicyNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ResourcePolicyNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourcePolicyNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidHomeRegionException extends __BaseException {
    name = "InvalidHomeRegionException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidHomeRegionException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidHomeRegionException.prototype);
        this.Message = opts.Message;
    }
}
export class TrailNotFoundException extends __BaseException {
    name = "TrailNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "TrailNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TrailNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class NotOrganizationManagementAccountException extends __BaseException {
    name = "NotOrganizationManagementAccountException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "NotOrganizationManagementAccountException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NotOrganizationManagementAccountException.prototype);
        this.Message = opts.Message;
    }
}
export const DeliveryStatus = {
    ACCESS_DENIED: "ACCESS_DENIED",
    ACCESS_DENIED_SIGNING_FILE: "ACCESS_DENIED_SIGNING_FILE",
    CANCELLED: "CANCELLED",
    FAILED: "FAILED",
    FAILED_SIGNING_FILE: "FAILED_SIGNING_FILE",
    PENDING: "PENDING",
    RESOURCE_NOT_FOUND: "RESOURCE_NOT_FOUND",
    SUCCESS: "SUCCESS",
    UNKNOWN: "UNKNOWN",
};
export class ConcurrentModificationException extends __BaseException {
    name = "ConcurrentModificationException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ConcurrentModificationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);
        this.Message = opts.Message;
    }
}
export const FederationStatus = {
    DISABLED: "DISABLED",
    DISABLING: "DISABLING",
    ENABLED: "ENABLED",
    ENABLING: "ENABLING",
};
export class GenerateResponseException extends __BaseException {
    name = "GenerateResponseException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "GenerateResponseException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, GenerateResponseException.prototype);
        this.Message = opts.Message;
    }
}
export const DashboardStatus = {
    CREATED: "CREATED",
    CREATING: "CREATING",
    DELETING: "DELETING",
    UPDATED: "UPDATED",
    UPDATING: "UPDATING",
};
export const Type = {
    RequestContext: "RequestContext",
    TagContext: "TagContext",
};
export const MaxEventSize = {
    Large: "Large",
    Standard: "Standard",
};
export class InvalidEventDataStoreStatusException extends __BaseException {
    name = "InvalidEventDataStoreStatusException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidEventDataStoreStatusException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidEventDataStoreStatusException.prototype);
        this.Message = opts.Message;
    }
}
export const ReadWriteType = {
    All: "All",
    ReadOnly: "ReadOnly",
    WriteOnly: "WriteOnly",
};
export const ImportStatus = {
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    INITIALIZING: "INITIALIZING",
    IN_PROGRESS: "IN_PROGRESS",
    STOPPED: "STOPPED",
};
export class ImportNotFoundException extends __BaseException {
    name = "ImportNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ImportNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ImportNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export const InsightType = {
    ApiCallRateInsight: "ApiCallRateInsight",
    ApiErrorRateInsight: "ApiErrorRateInsight",
};
export class InsightNotEnabledException extends __BaseException {
    name = "InsightNotEnabledException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InsightNotEnabledException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InsightNotEnabledException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidMaxResultsException extends __BaseException {
    name = "InvalidMaxResultsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidMaxResultsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidMaxResultsException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidNextTokenException extends __BaseException {
    name = "InvalidNextTokenException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidNextTokenException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);
        this.Message = opts.Message;
    }
}
export const ImportFailureStatus = {
    FAILED: "FAILED",
    RETRY: "RETRY",
    SUCCEEDED: "SUCCEEDED",
};
export const InsightsMetricDataType = {
    FILL_WITH_ZEROS: "FillWithZeros",
    NON_ZERO_DATA: "NonZeroData",
};
export class InvalidTimeRangeException extends __BaseException {
    name = "InvalidTimeRangeException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidTimeRangeException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidTimeRangeException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidTokenException extends __BaseException {
    name = "InvalidTokenException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidTokenException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidTokenException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidDateRangeException extends __BaseException {
    name = "InvalidDateRangeException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidDateRangeException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidDateRangeException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidQueryStatusException extends __BaseException {
    name = "InvalidQueryStatusException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidQueryStatusException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidQueryStatusException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidEventCategoryException extends __BaseException {
    name = "InvalidEventCategoryException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidEventCategoryException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidEventCategoryException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidLookupAttributesException extends __BaseException {
    name = "InvalidLookupAttributesException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidLookupAttributesException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidLookupAttributesException.prototype);
        this.Message = opts.Message;
    }
}
export const EventCategory = {
    Insight: "insight",
};
export const LookupAttributeKey = {
    ACCESS_KEY_ID: "AccessKeyId",
    EVENT_ID: "EventId",
    EVENT_NAME: "EventName",
    EVENT_SOURCE: "EventSource",
    READ_ONLY: "ReadOnly",
    RESOURCE_NAME: "ResourceName",
    RESOURCE_TYPE: "ResourceType",
    USERNAME: "Username",
};
export class InsufficientIAMAccessPermissionException extends __BaseException {
    name = "InsufficientIAMAccessPermissionException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InsufficientIAMAccessPermissionException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InsufficientIAMAccessPermissionException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidInsightSelectorsException extends __BaseException {
    name = "InvalidInsightSelectorsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidInsightSelectorsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidInsightSelectorsException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourcePolicyNotValidException extends __BaseException {
    name = "ResourcePolicyNotValidException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ResourcePolicyNotValidException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourcePolicyNotValidException.prototype);
        this.Message = opts.Message;
    }
}
export class DelegatedAdminAccountLimitExceededException extends __BaseException {
    name = "DelegatedAdminAccountLimitExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "DelegatedAdminAccountLimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DelegatedAdminAccountLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidImportSourceException extends __BaseException {
    name = "InvalidImportSourceException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidImportSourceException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidImportSourceException.prototype);
        this.Message = opts.Message;
    }
}
export class MaxConcurrentQueriesException extends __BaseException {
    name = "MaxConcurrentQueriesException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "MaxConcurrentQueriesException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, MaxConcurrentQueriesException.prototype);
        this.Message = opts.Message;
    }
}
