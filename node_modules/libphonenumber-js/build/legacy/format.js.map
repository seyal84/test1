{"version":3,"file":"format.js","names":["_format","_interopRequireDefault","require","_parse","_isObject","e","__esModule","_slicedToArray","r","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","length","n","l","Symbol","iterator","i","u","f","o","next","Object","done","push","value","isArray","formatNumber","_normalizeArguments","normalizeArguments","arguments","input","format","options","metadata","_formatNumber","args","_Array$prototype$slic","prototype","_Array$prototype$slic2","arg_1","arg_2","arg_3","arg_4","arg_5","parse","defaultCountry","extended","Error","isObject"],"sources":["../../source/legacy/format.js"],"sourcesContent":["import _formatNumber from '../format.js'\r\nimport parse from '../parse.js'\r\nimport isObject from '../helpers/isObject.js'\r\n\r\nexport default function formatNumber() {\r\n\tconst {\r\n\t\tinput,\r\n\t\tformat,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t} = normalizeArguments(arguments)\r\n\r\n\treturn _formatNumber(input, format, options, metadata)\r\n}\r\n\r\n// Sort out arguments\r\nfunction normalizeArguments(args)\r\n{\r\n\tconst [arg_1, arg_2, arg_3, arg_4, arg_5] = Array.prototype.slice.call(args)\r\n\r\n\tlet input\r\n\tlet format\r\n\tlet options\r\n\tlet metadata\r\n\r\n\t// Sort out arguments.\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `format('8005553535', ...)`.\r\n\tif (typeof arg_1 === 'string')\r\n\t{\r\n\t\t// If country code is supplied.\r\n\t\t// `format('8005553535', 'RU', 'NATIONAL', [options], metadata)`.\r\n\t\tif (typeof arg_3 === 'string')\r\n\t\t{\r\n\t\t\tformat = arg_3\r\n\r\n\t\t\tif (arg_5)\r\n\t\t\t{\r\n\t\t\t\toptions  = arg_4\r\n\t\t\t\tmetadata = arg_5\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_4\r\n\t\t\t}\r\n\r\n\t\t\tinput = parse(arg_1, { defaultCountry: arg_2, extended: true }, metadata)\r\n\t\t}\r\n\t\t// Just an international phone number is supplied\r\n\t\t// `format('+78005553535', 'NATIONAL', [options], metadata)`.\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (typeof arg_2 !== 'string')\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('`format` argument not passed to `formatNumber(number, format)`')\r\n\t\t\t}\r\n\r\n\t\t\tformat = arg_2\r\n\r\n\t\t\tif (arg_4)\r\n\t\t\t{\r\n\t\t\t\toptions  = arg_3\r\n\t\t\t\tmetadata = arg_4\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_3\r\n\t\t\t}\r\n\r\n\t\t\tinput = parse(arg_1, { extended: true }, metadata)\r\n\t\t}\r\n\t}\r\n\t// If the phone number is passed as a parsed number object.\r\n\t// `format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', [options], metadata)`.\r\n\telse if (isObject(arg_1))\r\n\t{\r\n\t\tinput  = arg_1\r\n\t\tformat = arg_2\r\n\r\n\t\tif (arg_4)\r\n\t\t{\r\n\t\t\toptions  = arg_3\r\n\t\t\tmetadata = arg_4\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\t}\r\n\telse throw new TypeError('A phone number must either be a string or an object of shape { phone, [country] }.')\r\n\r\n\t// Legacy lowercase formats.\r\n\tif (format === 'International') {\r\n\t\tformat = 'INTERNATIONAL'\r\n\t} else if (format === 'National') {\r\n\t\tformat = 'NATIONAL'\r\n\t}\r\n\r\n\treturn {\r\n\t\tinput,\r\n\t\tformat,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}"],"mappings":"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","ignoreList":[]}