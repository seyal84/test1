{"version":3,"file":"metadata.test.js","names":["_metadataMin","_interopRequireDefault","require","_metadataMin2","_metadataMin3","_metadataMin4","_metadataMin5","_metadata","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Symbol","iterator","constructor","prototype","describe","it","FR","Metadata","metadata","country","expect","type","to","equal","thrower","isSupportedCountry","getExtPrefix","getNumberingPlanMetadata","nationalPrefixForParsing","chooseCountryByCountryCallingCode","meta","numberingPlan","formats","nationalPrefixIsMandatoryWhenFormattingInNationalFormat","validateMetadata","a","b","countries","country_calling_codes","metadataV4","selectNumberingPlan","nonGeographic","metadataV3","metadataV2","possibleLengths","deep","length","nationalPrefix","pattern","leadingDigits","nationalPrefixTransformRule","nationalPrefixFormattingRule","nationalPrefixIsOptionalWhenFormattingInNationalFormat","metadataV1","ext","metaNew","defaultIDDPrefix","something"],"sources":["../source/metadata.test.js"],"sourcesContent":["import metadata from '../metadata.min.json' with { type: 'json' }\r\nimport metadataV1 from '../test/metadata/1.0.0/metadata.min.json' with { type: 'json' }\r\nimport metadataV2 from '../test/metadata/1.1.11/metadata.min.json' with { type: 'json' }\r\nimport metadataV3 from '../test/metadata/1.7.34/metadata.min.json' with { type: 'json' }\r\nimport metadataV4 from '../test/metadata/1.7.37/metadata.min.json' with { type: 'json' }\r\n\r\nimport Metadata, { validateMetadata, getExtPrefix, isSupportedCountry } from './metadata.js'\r\n\r\ndescribe('metadata', () => {\r\n\tit('should return undefined for non-defined types', () => {\r\n\t\tconst FR = new Metadata(metadata).country('FR')\r\n\t\texpect(type(FR.type('FIXED_LINE'))).to.equal('undefined')\r\n\t})\r\n\r\n\tit('should validate country', () => {\r\n\t\tconst thrower = () => new Metadata(metadata).country('RUS')\r\n\t\texpect(thrower).to.throw('Unknown country')\r\n\t})\r\n\r\n\tit('should tell if a country is supported', () => {\r\n\t\texpect(isSupportedCountry('RU', metadata)).to.equal(true)\r\n\t\texpect(isSupportedCountry('XX', metadata)).to.equal(false)\r\n\t})\r\n\r\n\tit('should return ext prefix for a country', () => {\r\n\t\texpect(getExtPrefix('US', metadata)).to.equal(' ext. ')\r\n\t\texpect(getExtPrefix('CA', metadata)).to.equal(' ext. ')\r\n\t\texpect(getExtPrefix('GB', metadata)).to.equal(' x')\r\n\t\t// expect(getExtPrefix('XX', metadata)).to.equal(undefined)\r\n\t\texpect(getExtPrefix('XX', metadata)).to.equal(' ext. ')\r\n\t})\r\n\r\n\tit('should cover non-occuring edge cases', () => {\r\n\t\tnew Metadata(metadata).getNumberingPlanMetadata('999')\r\n\t})\r\n\r\n\tit('should support deprecated methods', () => {\r\n\t\texpect(new Metadata(metadata).country('US').nationalPrefixForParsing()).to.equal('1')\r\n\t\texpect(\r\n            new Metadata(metadata).chooseCountryByCountryCallingCode('1').nationalPrefixForParsing()\r\n        ).to.equal('1')\r\n\t})\r\n\r\n\tit('should tell if a national prefix is mandatory when formatting a national number', () => {\r\n\t\tconst meta = new Metadata(metadata)\r\n\t\t// No \"national_prefix_formatting_rule\".\r\n\t\t// \"national_prefix_is_optional_when_formatting\": true\r\n\t\tmeta.country('US')\r\n\t\texpect(\r\n            meta.numberingPlan.formats()[0].nationalPrefixIsMandatoryWhenFormattingInNationalFormat()\r\n        ).to.equal(false)\r\n\t\t// \"national_prefix_formatting_rule\": \"8 ($1)\"\r\n\t\t// \"national_prefix_is_optional_when_formatting\": true\r\n\t\tmeta.country('RU')\r\n\t\texpect(\r\n            meta.numberingPlan.formats()[0].nationalPrefixIsMandatoryWhenFormattingInNationalFormat()\r\n        ).to.equal(false)\r\n\t\t// \"national_prefix\": \"0\"\r\n\t\t// \"national_prefix_formatting_rule\": \"0 $1\"\r\n\t\tmeta.country('FR')\r\n\t\texpect(\r\n            meta.numberingPlan.formats()[0].nationalPrefixIsMandatoryWhenFormattingInNationalFormat()\r\n        ).to.equal(true)\r\n\t})\r\n\r\n\tit('should validate metadata', () => {\r\n\t\tlet thrower = () => validateMetadata()\r\n\t\texpect(thrower).to.throw('`metadata` argument not passed')\r\n\r\n\t\tthrower = () => validateMetadata(123)\r\n\t\texpect(thrower).to.throw('Got a number: 123.')\r\n\r\n\t\tthrower = () => validateMetadata('abc')\r\n\t\texpect(thrower).to.throw('Got a string: abc.')\r\n\r\n\t\tthrower = () => validateMetadata({ a: true, b: 2 })\r\n\t\texpect(thrower).to.throw('Got an object of shape: { a, b }.')\r\n\r\n\t\tthrower = () => validateMetadata({ a: true, countries: 2 })\r\n\t\texpect(thrower).to.throw('Got an object of shape: { a, countries }.')\r\n\r\n\t\tthrower = () => validateMetadata({ country_calling_codes: true, countries: 2 })\r\n\t\texpect(thrower).to.throw('Got an object of shape')\r\n\r\n\t\tthrower = () => validateMetadata({ country_calling_codes: {}, countries: 2 })\r\n\t\texpect(thrower).to.throw('Got an object of shape')\r\n\r\n\t\tvalidateMetadata({ country_calling_codes: {}, countries: {}, b: 3 })\r\n\t})\r\n\r\n\tit('should work around `nonGeographical` typo in metadata generated from `1.7.35` to `1.7.37`', function() {\r\n\t\tconst meta = new Metadata(metadataV4)\r\n\t\tmeta.selectNumberingPlan('888')\r\n\t\texpect(type(meta.nonGeographic())).to.equal('object')\r\n\t})\r\n\r\n\tit('should work around `nonGeographic` metadata not existing before `1.7.35`', function() {\r\n\t\tconst meta = new Metadata(metadataV3)\r\n\t\texpect(type(meta.getNumberingPlanMetadata('800'))).to.equal('object')\r\n\t\texpect(type(meta.getNumberingPlanMetadata('000'))).to.equal('undefined')\r\n\t})\r\n\r\n\tit('should work with metadata from version `1.1.11`', function() {\r\n\t\tconst meta = new Metadata(metadataV2)\r\n\r\n\t\tmeta.selectNumberingPlan('US')\r\n\t\texpect(meta.numberingPlan.possibleLengths()).to.deep.equal([10])\r\n\t\texpect(meta.numberingPlan.formats().length).to.equal(1)\r\n\t\texpect(meta.numberingPlan.nationalPrefix()).to.equal('1')\r\n\t\texpect(meta.numberingPlan.nationalPrefixForParsing()).to.equal('1')\r\n\t\texpect(meta.numberingPlan.type('MOBILE').pattern()).to.equal('')\r\n\r\n\t\tmeta.selectNumberingPlan('AG')\r\n\t\texpect(meta.numberingPlan.leadingDigits()).to.equal('268')\r\n\t\t// Should've been \"268$1\" but apparently there was a bug in metadata generator\r\n\t\t// and no national prefix transform rules were written.\r\n\t\texpect(meta.numberingPlan.nationalPrefixTransformRule()).to.equal(null)\r\n\r\n\t\tmeta.selectNumberingPlan('AF')\r\n\t\texpect(meta.numberingPlan.formats()[0].nationalPrefixFormattingRule()).to.equal('0$1')\r\n\r\n\t\tmeta.selectNumberingPlan('RU')\r\n\t\texpect(\r\n            meta.numberingPlan.formats()[0].nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n        ).to.equal(true)\r\n\t})\r\n\r\n\tit('should work with metadata from version `1.0.0`', function() {\r\n\t\tconst meta = new Metadata(metadataV1)\r\n\r\n\t\tmeta.selectNumberingPlan('US')\r\n\t\texpect(meta.numberingPlan.formats().length).to.equal(1)\r\n\t\texpect(meta.numberingPlan.nationalPrefix()).to.equal('1')\r\n\t\texpect(meta.numberingPlan.nationalPrefixForParsing()).to.equal('1')\r\n\t\texpect(type(meta.numberingPlan.type('MOBILE'))).to.equal('undefined')\r\n\r\n\t\tmeta.selectNumberingPlan('AG')\r\n\t\texpect(meta.numberingPlan.leadingDigits()).to.equal('268')\r\n\t\t// Should've been \"268$1\" but apparently there was a bug in metadata generator\r\n\t\t// and no national prefix transform rules were written.\r\n\t\texpect(meta.numberingPlan.nationalPrefixTransformRule()).to.equal(null)\r\n\r\n\t\tmeta.selectNumberingPlan('AF')\r\n\t\texpect(meta.numberingPlan.formats()[0].nationalPrefixFormattingRule()).to.equal('0$1')\r\n\r\n\t\tmeta.selectNumberingPlan('RU')\r\n\t\texpect(\r\n            meta.numberingPlan.formats()[0].nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n        ).to.equal(true)\r\n\t})\r\n\r\n\tit('should work around \"ext\" data not present in metadata from version `1.0.0`', function() {\r\n\t\tconst meta = new Metadata(metadataV1)\r\n\t\tmeta.selectNumberingPlan('GB')\r\n\t\texpect(meta.ext()).to.equal(' ext. ')\r\n\r\n\t\tconst metaNew = new Metadata(metadata)\r\n\t\tmetaNew.selectNumberingPlan('GB')\r\n\t\texpect(metaNew.ext()).to.equal(' x')\r\n\t})\r\n\r\n\tit('should work around \"default IDD prefix\" data not present in metadata from version `1.0.0`', function() {\r\n\t\tconst meta = new Metadata(metadataV1)\r\n\t\tmeta.selectNumberingPlan('AU')\r\n\t\texpect(type(meta.defaultIDDPrefix())).to.equal('undefined')\r\n\r\n\t\tconst metaNew = new Metadata(metadata)\r\n\t\tmetaNew.selectNumberingPlan('AU')\r\n\t\texpect(metaNew.defaultIDDPrefix()).to.equal('0011')\r\n\t})\r\n})\r\n\r\nfunction type(something) {\r\n\treturn typeof something\r\n}"],"mappings":"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","ignoreList":[]}