{"version":3,"file":"extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js","names":["Metadata","matchesEntirely","extractNationalNumber","checkNumberLength","getCountryCallingCode","extractCountryCallingCodeFromInternationalNumberWithoutPlusSign","number","country","callingCode","metadata","countryCallingCode","indexOf","selectNumberingPlan","possibleShorterNumber","slice","length","_extractNationalNumbe","possibleShorterNationalNumber","nationalNumber","_extractNationalNumbe2","nationalNumberPattern"],"sources":["../../source/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js"],"sourcesContent":["import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport extractNationalNumber from './extractNationalNumber.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\nimport getCountryCallingCode from '../getCountryCallingCode.js'\r\n\r\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number â€” Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\r\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tconst countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode\r\n\tif (number.indexOf(countryCallingCode) === 0) {\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(country, callingCode)\r\n\t\tconst possibleShorterNumber = number.slice(countryCallingCode.length)\r\n\t\tconst {\r\n\t\t\tnationalNumber: possibleShorterNationalNumber,\r\n\t\t} = extractNationalNumber(\r\n\t\t\tpossibleShorterNumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tconst {\r\n\t\t\tnationalNumber\r\n\t\t} = extractNationalNumber(\r\n\t\t\tnumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\t// If the number was not valid before but is valid now,\r\n\t\t// or if it was too long before, we consider the number\r\n\t\t// with the country calling code stripped to be a better result\r\n\t\t// and keep that instead.\r\n\t\t// For example, in Germany (+49), `49` is a valid area code,\r\n\t\t// so if a number starts with `49`, it could be both a valid\r\n\t\t// national German number or an international number without\r\n\t\t// a leading `+`.\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t\t&&\r\n\t\t\t\tmatchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t)\r\n\t\t\t||\r\n\t\t\tcheckNumberLength(nationalNumber, metadata) === 'TOO_LONG'\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: possibleShorterNumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { number }\r\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAOC,qBAAqB,MAAM,6BAA6B;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,+DAA+DA,CACtFC,MAAM,EACNC,OAAO,EACPC,WAAW,EACXC,QAAQ,EACP;EACD,IAAMC,kBAAkB,GAAGH,OAAO,GAAGH,qBAAqB,CAACG,OAAO,EAAEE,QAAQ,CAAC,GAAGD,WAAW;EAC3F,IAAIF,MAAM,CAACK,OAAO,CAACD,kBAAkB,CAAC,KAAK,CAAC,EAAE;IAC7CD,QAAQ,GAAG,IAAIT,QAAQ,CAACS,QAAQ,CAAC;IACjCA,QAAQ,CAACG,mBAAmB,CAACL,OAAO,EAAEC,WAAW,CAAC;IAClD,IAAMK,qBAAqB,GAAGP,MAAM,CAACQ,KAAK,CAACJ,kBAAkB,CAACK,MAAM,CAAC;IACrE,IAAAC,qBAAA,GAEId,qBAAqB,CACxBW,qBAAqB,EACrBJ,QACD,CAAC;MAJgBQ,6BAA6B,GAAAD,qBAAA,CAA7CE,cAAc;IAKf,IAAAC,sBAAA,GAEIjB,qBAAqB,CACxBI,MAAM,EACNG,QACD,CAAC;MAJAS,cAAc,GAAAC,sBAAA,CAAdD,cAAc;IAKf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAEE,CAACjB,eAAe,CAACiB,cAAc,EAAET,QAAQ,CAACW,qBAAqB,CAAC,CAAC,CAAC,IAElEnB,eAAe,CAACgB,6BAA6B,EAAER,QAAQ,CAACW,qBAAqB,CAAC,CAAC,CAAC,IAGjFjB,iBAAiB,CAACe,cAAc,EAAET,QAAQ,CAAC,KAAK,UAAU,EACzD;MACD,OAAO;QACNC,kBAAkB,EAAlBA,kBAAkB;QAClBJ,MAAM,EAAEO;MACT,CAAC;IACF;EACD;EACA,OAAO;IAAEP,MAAM,EAANA;EAAO,CAAC;AAClB","ignoreList":[]}