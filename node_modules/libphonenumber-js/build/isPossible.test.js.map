{"version":3,"file":"isPossible.test.js","names":["_metadataMin","_interopRequireDefault","require","_isPossible","_parsePhoneNumber","e","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","toPrimitive","call","TypeError","String","Number","isPossibleNumber","v2","_len","parameters","Array","_key","undefined","parsePhoneNumber","extract","metadata","_isPossibleNumber","describe","it","expect","to","equal","phone","country","countryCallingCode","nationalNumber"],"sources":["../source/isPossible.test.js"],"sourcesContent":["import metadata from '../metadata.min.json' with { type: 'json' }\r\nimport _isPossibleNumber from './isPossible.js'\r\nimport parsePhoneNumber from './parsePhoneNumber.js'\r\n\r\nfunction isPossibleNumber(...parameters) {\r\n\tlet v2\r\n\tif (parameters.length < 1) {\r\n\t\t// `input` parameter.\r\n\t\tparameters.push(undefined)\r\n\t} else {\r\n\t\t// Convert string `input` to a `PhoneNumber` instance.\r\n\t\tif (typeof parameters[0] === 'string') {\r\n\t\t\tv2 = true\r\n\t\t\tparameters[0] = parsePhoneNumber(parameters[0], {\r\n\t\t\t\t...parameters[1],\r\n\t\t\t\textract: false\r\n\t\t\t}, metadata)\r\n\t\t}\r\n\t}\r\n\tif (parameters.length < 2) {\r\n\t\t// `options` parameter.\r\n\t\tparameters.push(undefined)\r\n\t}\r\n\t// Set `v2` flag.\r\n\tparameters[1] = {\r\n\t\tv2,\r\n\t\t...parameters[1]\r\n\t}\r\n\t// Add `metadata` parameter.\r\n\tparameters.push(metadata)\r\n\t// Call the function.\r\n\treturn _isPossibleNumber.apply(this, parameters)\r\n}\r\n\r\ndescribe('isPossible', () => {\r\n\tit('should work', function()\r\n\t{\r\n\t\texpect(isPossibleNumber('+79992223344')).to.equal(true)\r\n\r\n\t\texpect(isPossibleNumber({ phone: '1112223344', country: 'RU' })).to.equal(true)\r\n\t\texpect(isPossibleNumber({ phone: '111222334', country: 'RU' })).to.equal(false)\r\n\t\texpect(isPossibleNumber({ phone: '11122233445', country: 'RU' })).to.equal(false)\r\n\r\n\t\texpect(isPossibleNumber({ phone: '1112223344', countryCallingCode: 7 })).to.equal(true)\r\n\t})\r\n\r\n\tit('should work v2', () => {\r\n\t\texpect(\r\n            isPossibleNumber({ nationalNumber: '111222334', countryCallingCode: 7 }, { v2: true })\r\n        ).to.equal(false)\r\n\t\texpect(\r\n            isPossibleNumber({ nationalNumber: '1112223344', countryCallingCode: 7 }, { v2: true })\r\n        ).to.equal(true)\r\n\t\texpect(\r\n            isPossibleNumber({ nationalNumber: '11122233445', countryCallingCode: 7 }, { v2: true })\r\n        ).to.equal(false)\r\n\t})\r\n\r\n\tit('should work in edge cases', () => {\r\n\t\t// Invalid `PhoneNumber` argument.\r\n\t\texpect(() => isPossibleNumber({}, { v2: true })).to.throw('Invalid phone number object passed')\r\n\r\n\t\t// Empty input is passed.\r\n\t\t// This is just to support `isValidNumber({})`\r\n\t\t// for cases when `parseNumber()` returns `{}`.\r\n\t\texpect(isPossibleNumber({})).to.equal(false)\r\n\t\texpect(() => isPossibleNumber({ phone: '1112223344' })).to.throw('Invalid phone number object passed')\r\n\r\n\t\t// Incorrect country.\r\n\t\texpect(() => isPossibleNumber({ phone: '1112223344', country: 'XX' })).to.throw('Unknown country')\r\n\t})\r\n})"],"mappings":"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","ignoreList":[]}